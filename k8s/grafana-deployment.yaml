apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: ./kompose convert -f docker-compose.yml
    kompose.version: 1.22.0 (955b78124)
  creationTimestamp: null
  labels:
    io.kompose.service: grafana
  name: grafana
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: grafana
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: ./kompose convert -f docker-compose.yml
        kompose.version: 1.22.0 (955b78124)
      creationTimestamp: null
      labels:
        io.kompose.service: grafana
    spec:
      containers:
        - env:
            - name: GF_AUTH_ANONYMOUS_ENABLED
              value: "true"
            - name: GF_INSTALL_PLUGINS
              value: briangann-datatable-panel
            - name: GF_SECURITY_ADMIN_PASSWORD
              value: admin
            - name: GF_SECURITY_ADMIN_USER
              value: admin
            - name: GF_USERS_ALLOW_ORG_CREATE
              value: "false"
            - name: GF_USERS_ALLOW_SIGN_UP
              value: "false"
          image: grafana/grafana
          name: grafana
          ports:
            - containerPort: 3000
          resources: {}
          securityContext:
            runAsUser: 104
          volumeMounts:
            - mountPath: /var/lib/grafana/
              name: grafana-home
            - mountPath: /etc/grafana/
              name: grafana-conf
      restartPolicy: Always
      volumes:
        - name: grafana-home
          persistentVolumeClaim:
            claimName: grafana-home
        - name: grafana-conf
          persistentVolumeClaim:
            claimName: grafana-conf
status: {}
